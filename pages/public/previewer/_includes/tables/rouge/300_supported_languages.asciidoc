=== A - B

.Languages|Lexers: A - B
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`abap`
|abap
|The Advanced Business Application Programming Platform
https://developers.sap.com/topics/abap-platform.html[language, {browser-window--new}]
of SAP.

|`actionscript`
|as,as3
|ActionScript

|`apache`
|apache
|Configuration files for the https://httpd.apache.org/[Apache, {browser-window--new}]
web server.

|`apiblueprint`
|apib
|Markdown based API description language.

|`applescript`
|applescript
|The
https://support.apple.com/de-lu/guide/terminal/trml1003/mac/[AppleScript, {browser-window--new}]
scripting language by Apple Inc.

|`awk`
|awk
|Pattern-directed scanning and processing language

|`biml`
|biml
|BIML, Business Intelligence Markup Language

|`brainfuck`
|brainfuck
|The Brainfuck programming language. Brainfuck is one of the most famous
*esoteric programming languages*, and has inspired the creation of a host
of other languages.

|`bsl`
|bsl
|The 1C:Enterprise programming language

|===============================================================================

=== C - D

.Languages|Lexers: C - D
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`c`
|c
|The C programming language

|`ceylon`
|ceylon
|Say more, more clearly.

|`cfscript`
|cfc
|CFScript, the CFML scripting language

|`clojure`
|clj,cljs
|The https://clojure.org/[Clojure, {browser-window--new}]
programming language, a general-purpose programming language, combining
the approachability and interactive development of a scripting language
with an efficient and robust infrastructure for multithreaded programming.

|`cmake`
|cmake
|The cross-platform, open-source build system

|`coffeescript`
|coffee,coffee-script
|The http://coffeescript.org/[Coffeescript, {browser-window--new}]
programming language

|`common_lisp`
|cl,common-lisp,elisp,emacs-lisp
|The https://common-lisp.net/[Common Lisp, {browser-window--new}]
language, a variant of Lisp having excellent support for object oriented
programming, and fast prototyping capabilities.

|`conf`
|config,configuration
|A generic lexer for configuration files

|`console`
|terminal,shell_session,shell-session
|A generic lexer for shell sessions. Accepts ?lang and ?output lexer options,
a ?prompt option, and ?comments to enable comments.

|`coq`
|coq
|The https://coq.inria.fr/[Coq, {browser-window--new}]
is a formal proof management system. It provides a formal language to write
mathematical definitions, executable algorithms and theorems together with
an environment for semi-interactive development of machine-checked proofs.

|`cpp`
|c++
|The C++ programming language

|`crystal`
|cr
|The https://crystal-lang.org/[Crystal, {browser-window--new}]
Programming Language. Have a syntax similar to Ruby but's not
Ruby.

|`csharp`
|c#,cs
|A multi-paradigm
https://docs.microsoft.com/en-us/dotnet/csharp/[language, {browser-window--new}]
targeting *.NET*.

|`css`
|css
|Cascading Style Sheets, used to style web pages

|`d`
|dlang
|The https://dlang.org/[D, {browser-window--new}]
programming language, a general-purpose programming language with static
typing, systems-level access, and C-like syntax.

|`dart`
|dart
|The https://dart.dev/[Dart, {browser-window--new}]
programming language, a client-optimized language for fast apps on any
platform.

|`diff`
|patch,udiff
|Lexes unified diffs or patches.

|`digdag`
|digdag
|The https://www.digdag.io/[digdag, {browser-window--new}]
engine. A simple, open source, multi-cloud workflow engine.

|`docker`
|dockerfile
|The https://docs.docker.com/engine/reference/builder/[Dockerfile, {browser-window--new}]
syntax

|`dot`
|dot
|A graph description language

|===============================================================================

=== E - G

.Languages|Lexers: E - G
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`eiffel`
|eiffel
|The https://www.eiffel.org/doc/eiffel/Learning_Eiffel[Eiffel, {browser-window--new}]
programming language, the most comprehensive approach to the construction of
successful object-oriented software.

|`elixir`
|exs
|The https://elixir-lang.org/[Elixir, {browser-window--new}]
language, designed for building scalable and maintainable applications.

|`elm`
|elm
|The https://elm-lang.org/[Elm, {browser-window--new}]
language, programming delightful data visualization.

|`erb`
|eruby,rhtml
|Embedded Ruby template files

|`erlang`
|erl
|The https://www.erlang.org/[Erlang, {browser-window--new}]
programming language  used to build massively scalable soft real-time systems
with requirements on high availability. Some of its uses are in telecoms,
banking, e-commerce, computer telephony and instant messaging.

|`escape`
|esc
|A generic lexer for including escaped content.

|`factor`
|factor
|A https://factorcode.org/[Factor, {browser-window--new}]
practical stack-based programming language with high-level features
including dynamic types, extensible syntax, macros, and garbage
collection.

|`fortran`
|fortran
|The Fortran (2008) language

|`fsharp`
|fsharp
|The https://docs.microsoft.com/en-us/dotnet/fsharp/what-is-fsharp[F#, {browser-window--new}]
functional programming language

|`gherkin`
|cucumber,behat
|The DSL https://github.com/cucumber/cucumber[Gherkin, {browser-window--new}],
a business-readable spec DSL

|`glsl`
|glsl
|The https://www.khronos.org/opengl/wiki/OpenGL_Shading_Language[GLSL, {browser-window--new}]
the principal shading language for OpenGL.

|`go`
|golang
|The https://golang.org/[Programming language Go, {browser-window--new}]
programming language. Go is an open source programming language that makes it
easy to build simple, reliable, and efficient software.

|`gradle`
|gradle
|A powerful https://gradle.org/[build system, {browser-window--new}]
for the JVM. From mobile apps to microservices, from small startups to big
enterprises, Gradle helps teams build, automate and deliver better software,
faster.

|`graphql`
|graphql
|The https://graphql.org/[GraphQL, {browser-window--new}]
query language for APIs and a runtime for fulfilling those queries with your
existing data. GraphQL provides a complete and understandable description of
the data in your API, gives clients the power to ask for exactly what they
need and nothing more, makes it easier to evolve APIs over time,and enables
powerful developer tools.

|`groovy`
|groovy
|The Apache http://www.groovy-lang.org/[Groovy, {browser-window--new}]
programming language is a powerful, optionally typed and dynamic language,
with static-typing and static compilation capabilities, for the Java platform.
Aimed at improving developer productivity thanks to a concise, familiar and
easy to learn syntax. It integrates smoothly with any Java program, and
immediately delivers to your application powerful features, including
scripting capabilities, Domain-Specific Language authoring, runtime and
compile-time meta-programming and functional programming.

|===============================================================================

=== H - I

.Languages|Lexers: H - I
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`hack`
|hh
|The https://hacklang.org/[Hack, {browser-window--new}]
programming language. Hack reconciles the fast development cycle of a
dynamically typed language with the discipline provided by static typing,
while adding many features commonly found in other modern programming
languages.

|`haml`
|haml
|The https://haml.info/[Haml, {browser-window--new}]
templating system for Ruby. Haml (HTML abstraction markup language) is based
on one primary principle: markup should be beautiful. It’s not just beauty
for beauty’s sake either.

|`handlebars`
|hbs,mustache
|The https://handlebarsjs.com/[Handlebars, {browser-window--new}]
and https://mustache.github.io/[Mustache, {browser-window--new}]
templating languages.

|`haskell`
|hs
|The https://www.haskell.org/[Haskell, {browser-window--new}]
programming language, for advanced and purely functional programming.

|`hcl`
|hcl
|The https://github.com/hashicorp/hcl[Hashicorp, {browser-window--new}]
Configuration Language, used by Terraform and other Hashicorp tools.

|`html`
|html
|The https://www.w3.org/[HTML, {browser-window--new}]
markup language, the markup language of the web.

|`http`
|http
|The Lexer for https://www.w3.org/Protocols/rfc2616/rfc2616.html[http, {browser-window--new}]
requests and responses.

|`hylang`
|hy
|The https://docs.hylang.org/[HyLang, {browser-window--new}]
programming language. Hy is a Lisp dialect that’s embedded in Python. Since Hy
transforms its Lisp code into Python abstract syntax tree (AST) objects, you
have the whole beautiful world of Python at your fingertips, in Lisp form.

|`idlang`
|idlang
|IDLang, the https://old.dataone.org/software-tools/interactive-data-language-idl[Interactive Data Language, {browser-window--new}]
(IDL). IDL is a high-level language for data manipulation, visualization and
analysis. IDL has strong signal and image processing capabilities and extensive
math and statistical functions.

|`igorpro`
|igorpro
|The https://www.wavemetrics.com/[WaveMetrics, {browser-window--new}]
Igor Pro interactive software environment.

|`ini`
|ini
|The https://en.wikipedia.org/wiki/INI_file[INI, {browser-window--new}]
configuration format.

|`io`
|io
|The https://iolanguage.org/[IO, {browser-window--new}]
programming language.

|`irb`
|pry
|Interactive Ruby Shell sessions in
https://en.wikipedia.org/wiki/Interactive_Ruby_Shell[IRB, {browser-window--new}]
or
http://pry.github.io/[Pry, {browser-window--new}]

|===============================================================================

=== J - L

.Languages|Lexers: J - L
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`java`
|java
|The https://java.com/[Java, {browser-window--new}]
programming language.

|`javascript`
|js
|The https://developer.mozilla.org/en-US/docs/Web/JavaScript/About_JavaScript[JavaScript, {browser-window--new}]
language, the browser scripting language.

|`jinja`
|django
|The https://jinja.palletsprojects.com/en/2.11.x/[Django/Jinja, {browser-window--new}]
template engine. Jinja is a modern and designer-friendly templating language
for Python, modelled after Django’s templates.

|`json`
|json
|JSON, the
https://www.json.org/[JavaScript Object Notation, {browser-window--new}].
JSON is a lightweight data-interchange format, specidied for the programming
language _Javascript_. It is easy for humans to read and write. It is easy for
machines to parse and generate

|`json-doc`
|json-doc
|A https://www.json.org/[JSON, {browser-window--new}]
flavour with extenstions for documentation.

|`jsonnet`
|jsonnet
|The language https://jsonnet.org/[Jsonnet, {browser-window--new}]
is an elegant, formally-specified config language for JSON


|`jsp`
|jsp
|JSP, the JasperJSP Engine (Apache Tomcat) language specification
https://en.wikipedia.org/wiki/Apache_Tomcat[Java Server Pages, {browser-window--new}].
Jasper parses JSP files to compile them into Java code as servlets.

|`jsx`
|react
|For React, a Javascript-based framework to create UI-components for web
development, https://reactjs.org/docs/introducing-jsx.html[JSX, {browser-window--new}]
is a template/tagging specification to produce React *elements* from.

|`julia`
|jl
|The https://julialang.org/[Julia, {browser-window--new}]
programming language. Julia is dynamically typed, feels like a scripting
language, and has good support for interactive use. The language has a
domain in Data Visualization and Plotting.

|`kotlin`
|kotlin
|The https://kotlinlang.org/[Kotlin, {browser-window--new}]
programming language. Kotlin is a modern programming language to replace
JAVA-code on JAVA virtual machine (JVM).

|`lasso`
|lassoscript
|The https://www.lassosoft.com/[Lasso, {browser-window--new}]
programming language. Lasso bridges the gap between popular web servers,
data sources (databases), and various other communication tools, utilities,
and protocols such as email, directory services (LDAP, Active Directory),
web services (SOAP, XMLRPC), and PDF generation.

|`liquid`
|liquid
|The https://shopify.github.io/liquid/[Liquid, {browser-window--new}]
markup language. Liquid is a templating engine for Ruby, developed by
the makers of Shopify, a professional ecommerce website backed.

|`literate_coffeescript`
|litcoffee
|The http://sukima.github.io/litcoffee-presentation/[Literate coffeescript, {browser-window--new}]
is an implementation of *literate* programming (combining code and
documentation) to extend Haskell for the generation of Markdown-based
documentation from CoffeeScript programming code.

|`literate_haskell`
|lithaskell,lhaskell,lhs
|The https://wiki.haskell.org/Literate_programming[Literate haskell, {browser-window--new}]
is an implementation of *literate* programming (combining code and
documentation) for the Haskell proframming language. The tool used to generate
hyperlinked documentation from literate code is _Haddock_.

|`llvm`
|llvm
|The https://llvm.org/[LLVM, {browser-window--new}] Compiler Infrastructure is
a collection of modular and reusable compiler and toolchain technologies.

|`lua`
|lua
|The http://www.lua.org/[Lua, {browser-window--new}] language. Lua is a
powerful, efficient, lightweight, embeddable scripting language. It supports
procedural programming, object-oriented programming, functional programming,
data-driven programming, and data description.

|===============================================================================

=== M - N

.Languages|Lexers: M - N
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`m68k`
|m68k
|The language http://www.easy68k.com/[Motorola 68k Assembler, {browser-window--new}]
is the (near hardware) coding language for (the quite old) Motorola 68k
processors used for the first personal computer like _Amiga_, _Atari_ or the
first _Macintosh_ PCs from _Apple_.

|`magik`
|magik
|The https://www.mdt.net/[Smallworld Magik, {browser-window--new}], an
object-oriented programming language that supports multiple inheritance
and polymorphism, and it is dynamically typed. It was designed and implemented
in 1989 by *Arthur Chance* of _Smallworld Systems Ltd._. Magik is still a
part of the Smallworld technology platform.

|`make`
|makefile,mf,gnumake,bsdmake
|Code highlighter for the *Makefile* syntax. Make is a Unix utility, but is
available on other platform as well (Linux, Apple OSX or Windows). Make
exists in several flavours, is a code build utility for applications based on
the programming language _C_ or _C++_ (C PlusPlus). The *Makefile* defines
the processing chain to compile a program from the sources to an executable.

|`markdown`
|md,mkd
|The markup language https://daringfireball.net/projects/markdown/[Markdown
is a light-weight language for authors to write formatted text using a simple
plain-text editor. Markdown code is convert it to structurally valid XHTML
or HTML to be displayed in web browsers.

|`mathematica`
|wl
|Wolfram https://www.wolfram.com/mathematica[Mathematica, {browser-window--new}]
the world's definitive system for modern technical calculation and computing.

|`matlab`
|m
|The https://mathworks.com/[Matlab, {browser-window--new}]
language is used by MATLAB programming platform, designed specifically for
engineers and scientists. The heart of MATLAB is the MATLAB language, a
matrix-based language allowing the most natural expression of computational
mathematics.

|`moonscript`
|moon
|the http://moonscript.org/[Moonscript, {browser-window--new}]
language is a dynamic scripting language that compiles into _Lua_. It gives
the power of one of the fastest scripting languages combined with a rich set
of features.

|`mosel`
|mosel
|The language https://www.fico.com/fico-xpress-optimization/docs/latest/overview.html[Mosel, {browser-window--new}]
is an optimization language used by _Fico Xpress_. Mosel is an environment for
modeling and solving problems that is provided either in the form of libraries
or as a standalone program. Mosel includes a language that is both a modeling
and a programming language combining the strengths of these two concepts.

|`mxml`
|mxml
|The https://macromedia.fandom.com/wiki/MXML[MXML, {browser-window--new}]
markup language is an XML-based user interface markup language that renders
and describes graphical user interfaces and controls, first introduced by
_Macromedia_. Application developers use MXML in combination with
*ActionScript* to develop rich Internet applications.

|`nasm`
|nasm
|The assembler language
https://www.nasm.us/[Netwide Assembler, {browser-window--new}]
is used for the (Intel) x86 CPU architecture. Portable to nearly every modern
platform, and with code generation for many platforms old and new.

|`nginx`
|nginx
|Hightlights the configuration files for the web server
http://nginx.org/[NGINX, {browser-window--new}]. NGINX is a high performance
Load Balancer and Web Server accelerates content and application delivery,
improves security, facilitates availability and scalability for the busiest
web sites on the Internet.

|`nim`
|nimrod
|The https://nim-lang.org/[Nim, {browser-window--new}]
programming language (http://nim-lang.org/). Nim is a statically typed
compiled systems programming language. It combines successful concepts from
mature languages like Python, Ada and Modula.

|`nix`
|nixos
|The https://nixos.org/manual/nix/stable/#ch-expression-language[Nix, {browser-window--new}]
expression language. Nix is a tool that takes a unique approach to package
management and system configuration for reproducible builds and deployments.

|===============================================================================

=== O - P

.Languages|Lexers: O - P
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`objective_c`
|objc,obj-c,obj_c
|The language https://developer.apple.com/documentation/objectivec[ObjectiveC, {browser-window--new}]
is an extension of C commonly used to write Apple software.

|`ocaml`
|ocaml
|The language https://ocaml.org/[Objective Caml, {browser-window--new}]
is an industrial-strength programming language supporting functional,
imperative and object-oriented styles.

|`pascal`
|pascal
|The language https://en.wikipedia.org/wiki/Pascal_(programming_language)[Pascal, {browser-window--new}]
is a procedural programming language commonly used as a *teaching* language
learning programming techniques for computers.

|`perl`
|pl
|The https://www.perl.org/[Perl, {browser-window--new}]
scripting language. Perl is a highly capable, feature-rich programming language
with over 30 years of development.

|`php`
|php3,php4,php5
|The https://www.php.net/[PHP, {browser-window--new}]
scripting language. PHP is a popular general-purpose scripting language that
is especially suited to web development. Fast, flexible and pragmatic. PHP
powers everything from your blog to the most popular websites in the world.

|`plaintext`
|text
|A boring lexer that does *not* highlight anything

|`plist`
|plist
|A highlighter for https://discussions.apple.com/thread/1869002[plist, {browser-window--new}]
preference files for appliactions on _Apple_ platforms.

|`powershell`
|posh,microsoftshell,msshell
|The https://en.wikipedia.org/wiki/PowerShell[PowerShell, {browser-window--new}]
is a shell (run-time interpreter for terminal sessions) and a task automation
and configuration management framework for Microsoft Windows server and client
systems. Unlike most shells (e.g on Unix/Linux) which accept and return simple
text, PowerShell is built on top of the *.NET* Common Language Runtime.

|`praat`
|praat
|The https://www.fon.hum.uva.nl/praat/[Praat, {browser-window--new}]
scripting language, used for doing computer-based phonetics.

|`prolog`
|prolog
|The https://en.wikipedia.org/wiki/Prolog[Prolog, {browser-window--new}]
programming language. Prolog is a logic programming language associated with
artificial intelligence and computational linguistics.

|`prometheus`
|prometheus
|Prometheusis an open-source monitoring solution that provides a functional
query language called
https://prometheus.io/[PromQL, {browser-window--new}]
(Prometheus Query Language) that lets the user select and aggregate time
series data in real time.

|`properties`
|properties
|Higlighter for JAVA .properties config files.

|`protobuf`
|proto
|Google's ProtoBuf https://developers.google.com/protocol-buffers[Protocol buffers, {browser-window--new}]
is a language-neutral, platform-neutral, extensible mechanism for serializing
structured data – think XML, but smaller, faster, and simpler.

|`puppet`
|pp
|The https://puppet.com/[Puppet, {browser-window--new}]
configuration management language. Puppet is a software configuration
management system for the automatisation for typical administration tasks
to manage operating systems.

|`python`
|py
|The https://www.python.org/[Python, {browser-window--new}]
programming language. Python is an interpreted, object-oriented, high-level
programming language.

|`q`
|kdb+
|The https://kx.com/[Q, {browser-window--new}]
programming language. Q serves as the query language for *kdb+*, a disk or
in-memory, column-based database.

|===============================================================================

=== Q - S

.Languages|Lexers: Q - S
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`qml`
|qml
|The https://wiki.qt.io/[QML, {browser-window--new}]
markup language. QML (Qt Modeling Language) is a user interface
markup language. It is a declarative language (similar to CSS and JSON)
for designing user interface–centric applications.

|`r`
|s
|The https://www.r-project.org/[R, {browser-window--new}]
statistics language. R is a free software environment for statistical
computing and graphics.

|`racket`
|racket
|The https://racket-lang.org/[Racket, {browser-window--new}] language
is a general-purpose, multi-paradigm programming language based on the
Scheme dialect of _Lisp_. It is designed to be a platform for programming
language design and implementation.

|`ruby`
|rb
|The https://www.ruby-lang.org/en/[Ruby, {browser-window--new}]
programming language.

|rust
|rs,no_run,ignore,should_panic
|The https://www.rust-lang.org/[Rust, {browser-window--new}]
programming language.

|`sass`
|scss
|The https://sass-lang.com/[Sass, {browser-window--new}]
stylesheet language language.

|`scala`
|scala
|The https://www.scala-lang.org/[Scala, {browser-window--new}]
programming language.

|`scheme`
|scheme
|The Scheme variant of _Lisp_.

|`sed`
|sed
|sed, the ultimate stream editor.

|shell
|bash,zsh,ksh,sh
|Lexer for various shell languages, including sh and bash.

|`sieve`
|sieve
|Mail filtering language

|`slim`
|slim
|The Slim template language.

|`smalltalk`
|st,squeak
|The Smalltalk programming language.

|`smarty`
|smarty
|Smarty Template Engine.

|`sml`
|ml
|Standard ML.

|`sqf`
|sqf
|Status Quo Function, a Real Virtuality engine scripting language.

|`sql`
|sql
|Structured Query Language, for relational databases

|`supercollider`
|supercollider
|A cross-platform interpreted programming language for sound synthesis,
algorithmic composition, and realtime performance.

|`swift`
|swift
|The language https://developer.apple.com/swift/[Swift, {browser-window--new}]
is a multi paradigm, compiled programming language developed by Apple for
iOS and OSX development.

|===============================================================================

=== T - Z

.Languages|Lexers: T - Z
[cols="3,3,6a", subs=+macros, options="header", role="rtable mb-5"]
|===============================================================================
|Language |Alias |Description

|`tap`
|tap
|Test Anything Protocol.

|`tcl`
|tcl
|The http://tcl.tk/[Tool Command Language, {browser-window--new}].

|`terraform`
|tf
|Terraform HCL Interpolations.

|`tex`
|latex
|The TeX typesetting system

|`toml`
|toml
|The https://github.com/mojombo/toml/[TOML, {browser-window--new}]
configuration format.

|`tsx`
|tsx
|TSX allows for embedding JSX elements inside the file, and is largely
used by _React_.

|`tulip`
|tulip
|The https://github.com/tulip-lang/tulip[Tulip, {browser-window--new}]
programming language (twitter.com/tuliplang).

|`turtle`
|turtle
|Terse RDF Triple Language, TriG

|`twig`
|twig
|The https://twig.symfony.com/[Twig, {browser-window--new}]
template engine. Twig is a modern template engine for *PHP*.

|`typescript`
|ts
|TypeScript, a superset of JavaScript.

|`vala`
|vala
|A programming language similar to csharp.

|`vb`
|visualbasic
|The Visual Basic language.

|`verilog`
|verilog
|The System Verilog hardware description language

|`vhdl`
|vhdl
|Very High Speed Integrated Circuit Hardware description language.

|viml
|vim,vimscript,ex
|The language https://www.vim.org/[VimL, {browser-window--new}]
is the scripting language for the Vim editor.

|`vue`
|vuejs
|Vue.js single-file components

|`wollok`
|wollok
|Wollok lang

|`xml`
|xml
|The XML markup language.

|`xojo`
|realbasic
|Xojo

|`yaml`
|yaml
|The https://yaml.org/[Yaml, {browser-window--new}]
Ain't Markup Language. A human friendly data serialization standard for
all programming languages.

|===============================================================================
